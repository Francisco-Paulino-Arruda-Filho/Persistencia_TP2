"""Migracao inicial

Revision ID: a387e7e48b78
Revises: 
Create Date: 2025-06-10 16:42:29.124747

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'a387e7e48b78'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Cria department sem manager_id FK
    op.create_table(
        'department',
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('extension', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('manager_id', sa.Integer(), nullable=True),  # só a coluna, sem FK ainda
    )

    # Cria employee sem department_id FK
    op.create_table(
        'employee',
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('cpf', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('position', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('admission_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('department_id', sa.Integer(), nullable=True),  # só a coluna, sem FK ainda
        sa.Column('id', sa.Integer(), primary_key=True),
    )

    # Cria as outras tabelas normalmente (benefit, employeebenefit, payroll)...

    # Depois cria as constraints FK que faltavam
    op.create_foreign_key(
        'fk_department_manager', 'department', 'employee', ['manager_id'], ['id']
    )
    op.create_foreign_key(
        'fk_employee_department', 'employee', 'department', ['department_id'], ['id']
    )
    op.create_table('benefit',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employeebenefit',
    sa.Column('start_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('end_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('custom_amount', sa.Float(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('benefit_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['benefit_id'], ['benefit.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payroll',
    sa.Column('gross_salary', sa.Float(), nullable=False),
    sa.Column('deductions', sa.Float(), nullable=False),
    sa.Column('net_salary', sa.Float(), nullable=False),
    sa.Column('reference_month', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payroll')
    op.drop_table('employeebenefit')
    op.drop_table('employee')
    op.drop_table('department')
    op.drop_table('benefit')
    # ### end Alembic commands ###
